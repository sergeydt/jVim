*usr_90.txt*	Для Vim version 6.3.  Последнее изменение: 2004 Mar 21

		РУКОВОДСТВО ПОЛЬЗОВАТЕЛЯ VIM - Брам Мооленаар

				Установка Vim

						         *install* *установка*
Перед тем, как пользоваться Vim, его необходимо установить. В зависимости от
вашей системы это сделать или просто, или очень просто. В этой главе
содержится несколько советов по установке, а также объясняется как обновить
редактор до более поздней версии.

|90.1|	Unix
|90.2|	MS-Windows
|90.3|	Обновление до более свежей версии
|90.4|	Проблемы, которые могут возникнуть при установке
|90.5|	Удаление Vim

Предыдущая глава: |usr_45.txt|	Выбор языка
      Содержание: |usr_toc.txt|

==============================================================================
*90.1*	Unix

Прежде всего вам потребуется решить, собираетесь ли вы использовать редактор
во всей системе, или устанавливаете его только для одного пользователя.
Порядок установки практически один и тот же, отличаются только используемые
каталоги. 
   Для установки Vim в систему часто используется каталог "/usr/local", хотя
это зависит от конкретной системы. Посмотрите, где в вашей системе обычно
устанавливаются программы. 
   При установке Vim для отдельного пользователя можно использовать домашний
каталог в качестве базового. Файлы будут размещены в соответствующих
подкаталогах, таких как "bin" и "shared/vim".


УСТАНОВКА ИЗ ПАКЕТА

Вы можете получить скомпилированный пакет для многих различных систем UNIX.
Длинный список со ссылками на пакеты можно найти на странице:

	http://www.vim.org/binaries.html ~

Пакеты компилируются добровольцами и зачастую они не самой последней свежести.
На UNIX лучше всего скомпилировать Vim из исходного кода самостоятельно. Кроме
того, при этом вы получаете возможность контролировать, какие особенности
будут включены в редактор. Это, конечно же, потребует наличия у вас
компилятора. 

Если у вас Linux, то программа "vi" скорее всего является мини-версией Vim.
Например, она не позволяет делать подсветку синтаксиса. Постарайтесь найти в
вашей системе другой пакет Vim или обратитесь к веб-сайту. 


УСТАНОВКА ИЗ ИСХОДНОГО КОДА

Для компиляции и установки Vim вам потребуется следующее:

	-  Компилятор C (предпочтительнее GCC)
	-  Программа GZIP (её можно загрузить с сайта www.gnu.org)
	-  Исходный код Vim и архив с файлами настроек и дополнений

Архивные файлы Vim можно найти в интернете. Обратитесь к ближайшему к вам
зеркалу для быстрой загрузки. Список зеркал доступен по адресу: 

	ftp://ftp.vim.org/pub/vim/MIRRORS ~

Вы также можете пользоваться нашим сайтом ftp.vim.org, если вас устраивает
скорость соединения. Ищите нужные файлы в каталоге "unix". Номер версии
включён в имя файла. Вам наверняка потребуется самая последняя версия.
   Файлы Vim доступны в двух видах: один большой архив, который содержит всё,
что может потребоваться, или четыре файла меньшего размера, каждый из которых
умещается на стандартную дискету. Для версии 6.1 один большой архив
называется:

	vim-6.1.tar.bz2 ~

Для распаковки вам потребуется программа bzip2. Если у вас её нет, то
загрузите четыре файла меньшего размера, их можно распаковать с помощью gzip.
Для версии 6.1 названия файлов следующие:

	vim-6.1-src1.tar.gz ~
	vim-6.1-src2.tar.gz ~
	vim-6.1-rt1.tar.gz ~
	vim-6.1-rt2.tar.gz ~


КОМПИЛЯЦИЯ

Создайте рабочий каталог для компиляции, например: >

	mkdir ~/vim
	cd ~/vim

Затем распакуйте архивы в этом каталоге. Если у вас один большой архивный
файл, то используйте команду: >

	bzip2 -d -c path/vim-6.1.tar.bz2 | tar xf -

Замените "path" на путь к каталогу, в который вы поместили архивный файл.

Если у вас четыре небольших файла, то пользуйтесь командами: >

	gzip -d -c path/vim-6.1-src1.tar.gz | tar xf -
	gzip -d -c path/vim-6.1-src2.tar.gz | tar xf -
	gzip -d -c path/vim-6.1-rt1.tar.gz | tar xf -
	gzip -d -c path/vim-6.1-rt2.tar.gz | tar xf -

Если вас устраивают особенности, включённые по умолчанию, и ваше окружение
настроено правильно, то скомпилировать Vim можно при помощи команд: >

	cd vim61/src
	make

Программа make запустит сценарий configure и затем скомпилирует редактор.
Позднее мы расскажем как компилировать редактор с произвольно выбранными
особенностями.
   Если во время компиляции возникнут ошибки, то посмотрите внимательно на
сообщения об ошибках. В них должна содержаться подсказка о том, что не так в
ваших настройках. Надеемся, что вы будете в состоянии исправить ошибки.
Возможно вам придётся отключить ту или иную особенность Vim. Подробнее о
компиляции на вашей системе смотрите в Makefile.


ПРОВЕРКА

Вы можете проверить результат компиляции при помощи команды: >

	make test

Эта команда запустит выполнение серии сценариев, позволяющих убедиться, что
Vim работает как положено. Vim будет запущен несколько раз и во время
выполнения тестов на экране будут появляться различные сообщения и текст. Если
всё будет в порядке, то появится сообщение:

	test results: ~
	ALL DONE ~

Если вы увидите одно-два сообщения о неудачном тестировании, то Vim может, тем
не менее, быть вполне работоспособным, хотя и не будет выполнять все действия
в совершенстве. Если вы увидите слишком много сообщений об ошибках или Vim не
может окончить тестирование, то что-то было сделано не так. Постарайтесь найти
причину ошибок самостоятельно, или найдите того, кто может помочь вам. Вы
можете посмотреть в |архивы-рассылки|, возможно там уже есть похожей проблемы.
Если ничего не помогает, то можно написать письмо в |рассылку| Vim, возможно
там найдётся кто-то, кто сможет вам помочь.


УСТАНОВКА
					       *install-home* *установка-home*
Если вы хотите установить Vim в свой домашний каталог, то отредактируйте
Makefile и найдите в нём строку:

	#prefix = $(HOME) ~

Удалите # в начале строки.
   При установке Vim для использования во всей системе, Vim скорее всего 
выберет наиболее подходящий каталог для установки самостоятельно. Вы также
можете указать свой каталог, см. ниже. Для последующих действий вам необходимы
права супер-пользователя (root).

Для установки Vim наберите: >

	make install

После этого все файлы окажутся на нужных местах. Вы можете проверить Vim,
используйте два простых теста, чтобы выяснить, способен ли редактор найти
файлы для своих настроек. Итак, запустите Vim и введите: >

	:help
	:syntax enable

Если это не работает, то используйте следующую команду, чтобы узнать где Vim
ищет собственные файлы, которые ему необходимы при работе: >

	:echo $VIMRUNTIME

Вы также можете запустить Vim с аргументом "-V", чтобы видеть что происходит
во время запуска редактора: >

	vim -V

Не забывайте, что в руководстве пользователя предполагается, что вы работаете
в редакторе в режиме, частично несовместимом с Vi. После установки Vim
следуйте инструкциям в разделе |несовместимость|, чтобы ваш Vim работал как
Vim, а не как Vi.


ВЫБОР ОСОБЕННОСТЕЙ

В Vim есть несколько способов выбора особенностей при компиляции. Самое
простое это отредактировать Makefile. В нём содержится много примеров и
комментариев. Зачастую, всё что требуется для включения или отключения той или
иной особенности -- это раскомментировать или закомментировать ту или иную
строку.
   В качестве другого способа можно предложить отдельный вызов сценария
"configure". Это позволяет вручную выбрать все опции для конфигурации. Минусом
этого метода является то, что вам приходится самому соображать что нужно
набирать в командной строке.
   Приведем список самых интересных аргументов для сценария "configure". Все
   эти особенности можно включить и в Makefile.

	--prefix={каталог}		Базовый каталог для установки Vim.

	--with-features=tiny		Компиляция с минимальным числом
					особенностей.
	--with-features=small		Компиляция с наиболее важными
					особенностями.
	--with-features=big		Компиляция с большинство особенностей.
	--with-features=huge		Компиляция со всеми особенностями.
					См. |+особенности-список| для справки
					о том, какие возможности включены при
					компиляции в каждом отдельном случае.

	--enable-perlinterp		Включить интерфейс для Perl. Подобные
					аргументы также существуют и для ruby,
					python и tcl.

	--disable-gui			Компиляция без графического интерфейса.
	--without-x			Компиляция без особенностей X-windows.
					Если использованы оба аргумента, то
					Vim не будет подсоединяться к серверу
					X, что ускорит процесс запуска.

Полный список аргументов можно получить по команде: >

	./configure --help

Объяснения о том, что даёт та или иная особенность со ссылками на более
подробную информацию, см. здесь: |особенности-список|.
   Любители приключений могут самостоятельно редактировать файл "feature.h".
Вы также можете сами менять исходный код по своему усмотрению!

==============================================================================
*90.2*	MS-Windows

Существует два способа установки Vim на Microsoft Windows. Вы можете
распаковать отдельные архивы или использовать один большой архив, который
распаковывается сам. Большинство пользователей современных компьютеров
предпочитают второй метод. Для использования первого метода вам потребуется:

	- Архив с программой Vim.
	- Архив с файлами, используемыми при работе Vim.
	- Программа для распаковки архивов zip.

Архивы Vim 
To get the Vim archives, look in this file for a mirror near you, this should
provide the fastest download:

	ftp://ftp.vim.org/pub/vim/MIRRORS ~

Архивные файлы Vim можно найти в интернете. Обратитесь к ближайшему к вам
зеркалу для быстрой загрузки. Список зеркал доступен по адресу: 

	ftp://ftp.vim.org/pub/vim/MIRRORS ~

Вы также можете пользоваться нашим сайтом ftp.vim.org, если вас устраивает
скорость соединения. Ищите нужные файлы в каталоге "pc". Номер версии
включён в имя файла. Вам наверняка потребуется самая последняя версия. Мы
будем пользоваться в этом руководстве в качестве примера версией 6.1, что
отражается в именах файлов как "61".

	gvim61.exe		Самораспаковывающийся архив.

Это всё, что вам потребуется для второго метода. Просто запустите программу и
следуйте указаниям на экране.

Для первого метода вам потребуется выбрать нужный архив. Вот доступные
возможности:

	gvim61.zip		Обычная версия с графическим интерфейсом для
				MS-Windows.
	gvim61ole.zip		Обычная версия с графическим интерфейсом для
				MS-Windows с поддержкой OLE.
				Использует большее количество памяти,
				поддерживает работу с другими приложениями
				OLE.
	vim61w32.zip		Консольная 32-битная версия для MS-Windows.
				Для использования в консоли  Win NT/2000/XP.
				Работает с определёнными проблемами в системах
				Win 95/98.
	vim61d32.zip		32-битная версия MS-DOS.  Для использования в
				консольном окне Win 95/98.
	vim61d16.zip		16-битная версия MS-DOS.  Только для старых
				систем. Не поддерживает длинные имена файлов.

Вам нужен только один из этих архивов. Хотя, вы можете установить как
консольную, так и графическую версию. Вам в любом случае также потребуется
архив с файлами, которые требуются для работы Vim.

	vim61rt.zip		Файлы, необходимые для работы Vim.

Распакуйте архивы при помощи программы для распаковки архивов zip. Например,
можете пользоваться программой "unzip": >

	cd c:\
	unzip path\gvim61.zip
	unzip path\vim61rt.zip

Эти команды распакуют архивы в каталог "c:\vim\vim61". Если у вас уже есть
каталог для Vim, то перейдите в каталог, который расположен в дереве как раз
над ним.
   Теперь, перейдите в каталог "vim\vim61" и запустите программу установки: >

	install

Обращайте внимание на сообщения и выбирайте опции, которые вам понадобятся.
После того, как вы выберете "do it", программа установки выполнит указанные
вами действия. 
   Программа установки не устанавливает дополнительные файлы, требуемые при
работе Vim. Они останутся там, где вы их распаковали.

Если вас не устраивают особенности, включённые в поставку в скомпилированных
файлах, то вы можете попробовать скомпилировать Vim самостоятельно. Архив с
исходными кодами редактора можно получить там же, где и скомпилированную
программу. Вам потребуется компилятор, для которого существует написанный
makefile. Подойдёт, например Microsoft Visual C. В качестве бесплатной
альтернативы можно использовать компилятор для командной строки Borland 5.5, а
также MingW и Cygwin. Советы по компиляции смотрите в файле src/INSTALLpc.txt.

==============================================================================
*90.3*	Обновление до более свежей версии

Если вы хотите обновить версию Vim, которым пользуетесь, то предлагаем вам ряд
рекомендаций.


UNIX

При выполнении команды "make install" файлы, которые требуются при работе Vim
будут скопированы в каталог, отдельный для каждой версии, вместо того, чтобы
переписывать старые файлы. Это позволяет работать с разными версиями Vim
одновременно.
   Исполняемый файл "vim" перепишет прежнюю версию. Если вам не требуется
сохранять предыдущую версию программы, то можно просто запускать "make
install". Файлы, необходимые для работы Vim прежней версии можно удалить
вручную. Просто удалите каталог с соответствующим номером версии. Например: >

	rm -rf /usr/local/share/vim/vim58

Обычно в этом каталоге нет никаких изменённых файлов. Если вы вносили
изменения, скажем в файл "filetype.vim", то позаботьтесь о том, чтобы
изменения попали и в новую версию, перед тем, как удалять этот каталог.

Если вы хотите сначала попробовать новую версию в работе и только потом
удалять старую, то установите новую версию с другим именем. Для этого вам
потребуется ввести соответствующий аргумент для сценария configure. Например:
>
	./configure --with-vim-name=vim6

Перед выполнением "make install" вы можете использовать команду "make -n
install", чтобы удостовериться в том, что ничего ценного не будет переписано.
   Когда вы, наконец, решитесь полностью перейти на новую версию, всё что вам
потребуется сделать, это изменить имя программы на "vim". Пример: >

	mv /usr/local/bin/vim6 /usr/local/bin/vim


MS-WINDOWS

Процесс обновления почти такой же, как и при установке новой версии с нуля.
Просто распакуйте файлы на место прежней версии. Для файлов, требуемых для
работы новой версии, будет создан свой отдельный каталог, например "vim61".
Ваши собственные файлы, vimrc, viminfo и т.д., останутся без изменений.
   Если вы хотите использовать новую версию параллельно со старой, то вместо
запуска программы install (она перепишет старые файлы), вам потребуется
вручную запускать новую версию с указанием полного пути к файлу. Программа
должна быть в состоянии автоматически найти все требуемые для данной версии
вспомогательные файлы. Если этого не случится, то вам потребуется также
установить правильное значение переменной окружения $VIMRUNTIME.
   После обновления вы можете удалить файлы от предыдущей версии. См.
подробности в |90.5|.

==============================================================================
*90.4*	Проблемы, которые могут возникнуть при установке

В этом разделе описаны некоторые основные проблемы, возникающие при установке
Vim, и приводятся пути их решения. Здесь также даются ответы на некоторые
вопросы по установке Vim.


В: У меня нет полномочий супер-пользователя. Как я могу установить Vim? (Unix)

Используйте соответствующий аргумент для сценария configure, чтобы установить
Vim в своём домашнем каталоге, в каталог $HOME/vim: >

	./configure --prefix=$HOME

Это установит вашу личную копию Vim. Вы должны добавить $HOME/bin в ваш путь
для поиска исполняемых файлов. См. также |установка-home|.


В: У меня проблемы с цветами на экране. (Unix)

Проверьте настройки терминала при помощи следующей команды оболочки: >

	echo $TERM

Если указан неправильный терминал, то исправьте его. Подробнее об этом читайте
в |06.2|. Другое решение -- всегда использовать версию Vim с графическим
интерфейсом, которая называется gvim. Для неё не требуется правильная
установка терминала.


В: Кнопки Backspace и Delete работают неправильно.

Для кнопок backspace <BS> и Delete <Del> не всегда ясно, какая кнопка какой
код отправляет. Проверьте, прежде всего, значение переменной $TERM. Если там
всё в порядке, то попробуйте ввести такие команды: >

	:set t_kb=^V<BS>
	:set t_kD=^V<Del>

При наборе первой команды вам потребуется нажать CTRL-V и затем нажать кнопку
<BS>. Во второй команде то же самое надо проделать с кнопкой <Del>. Эти
команды можно поместить в сценария для запуска Vim vimrc, см. |05.1|. К
сожалению, это может не работать на другом терминале. Другое решение также
описано здесь: |:fixdel|.


В: Я пользуюсь RedHat Linux. Могу ли я использовать Vim, включённый в поставку
системы?

По умолчанию, RedHat устанавливает минимальную версию Vim. Посмотрите в
пакетах RPM "Vim-enhanced-version.rpm" и установите этот пакет.


В: Как включить подсветку синтаксиса? Как заставить модули работать?

Используйте пример сценария запуска vimrc. Как пользоваться этим сценарием
объясняется здесь: |несовместимость|. 

См. главу 6 для получения информации о подсветки синтаксиса: |usr_06.txt|.


В: Где взять хороший файл vimrc?

Несколько хороших примеров можно найти на сайте www.vim.org.


В: Где найти модули для Vim?

Обратитесь к сайту Vim-online: http://vim.sf.net. Многие пользователи
загружают на этот сайт полезные сценарии и модули для Vim.


В: Где найти дополнительные советы?

См. сайт Vim-online: http://vim.sf.net. Там имеется архив с советами, которые
дают другие пользователи Vim. Вам также может помочь поиск в почтовой
рассылке: |архивы-рассылки|.

==============================================================================
*90.5*	Удаление Vim

Здесь указано как удалить Vim из системы, в том маловероятном случае, если вам
это потребуется.


UNIX

При установке Vim в виде пакета, используйте менеджер пакетов для удаления
программы.
   Если вы установили Vim из исходного кода, то пользуйтесь командой: >

	make uninstall

Однако, для этого требуется, чтобы вы хранили оригинальные исходные коды в
системе. В противном случае вам потребуется вручную удалить файлы. Вот пример
списка файлов, при использовании в качестве базового каталога для установки
"/usr/local": >

	rm -rf /usr/local/share/vim/vim61
	rm /usr/local/bin/eview
	rm /usr/local/bin/evim
	rm /usr/local/bin/ex
	rm /usr/local/bin/gview
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvimdiff
	rm /usr/local/bin/rgview
	rm /usr/local/bin/rgvim
	rm /usr/local/bin/rview
	rm /usr/local/bin/rvim
	rm /usr/local/bin/rvim
	rm /usr/local/bin/view
	rm /usr/local/bin/vim
	rm /usr/local/bin/vimdiff
	rm /usr/local/bin/vimtutor
	rm /usr/local/bin/xxd
	rm /usr/local/man/man1/eview.1
	rm /usr/local/man/man1/evim.1
	rm /usr/local/man/man1/ex.1
	rm /usr/local/man/man1/gview.1
	rm /usr/local/man/man1/gvim.1
	rm /usr/local/man/man1/gvimdiff.1
	rm /usr/local/man/man1/rgview.1
	rm /usr/local/man/man1/rgvim.1
	rm /usr/local/man/man1/rview.1
	rm /usr/local/man/man1/rvim.1
	rm /usr/local/man/man1/view.1
	rm /usr/local/man/man1/vim.1
	rm /usr/local/man/man1/vimdiff.1
	rm /usr/local/man/man1/vimtutor.1
	rm /usr/local/man/man1/xxd.1


MS-WINDOWS

Если вы устанавливали Vim при помощи самораспаковывающегося архива, то для
удаления запустите программу "uninstall-gui", которая находится в том же
каталоге, что и другие программы Vim, например "c:\vim\vim61". Если вы создали
группу в меню "Пуск", то она также должна быть в этой группе. Эта программа
удалит большинство файлов, включая ярлыки на рабочем столе и группу в меню
"Пуск". Некоторые файлы, однако, останутся в системе до перезагрузки Windows.
   Вам будет дана возможность удаления всего каталога "vim". Будьте
внимательны, т.к. этот каталог может содержать ваш файл vimrc и другие
созданные вами для работы Vim файлы.

Если вы устанавливали Vim из архивов zip, то лучше всего пользоваться
программой "uninstal" для удаления Vim из системы. Она находится в том же
каталоге, что и программа "install", например "c:\vim\vim61". Её можно также
запустить из окна "Установка и удаление программ". 
   Однако, эта программа удаляет только созданные в реестре записи для Vim.
Вам потребуется самостоятельно удалить файлы программы. Просто удалите каталог
"vim\vim61" со всеми файлами, которые в нём содержатся. В этом каталоге не
должно быть изменённых вами файлов, но вы можете ещё раз проверить это перед
удалением.
   Каталог "vim" скорее всего содержит ваш файл vimrc и другие созданные вами
файлы, которые вы, возможно, захотите сохранить.

==============================================================================

     Содержание: |usr_toc.txt|
Авторские права: см. |авторские_права_на_документацию|  

vim:tw=78:ts=8:ft=help:norl:
